# POWER DOMAIN CREATION - LIST OF ELEMENTS

create_power_domain -include_scope TOP 


#ADD LSQ Domain later
create_power_domain PG_LSU_1 -elements {
datapath/ldx_path/addr1Cam/INST_LOOP[1].cam_inst
datapath/ldx_path/addr2Cam/INST_LOOP[1].cam_inst
datapath/ldx_path/stqSizeCam/INST_LOOP[1].cam_inst
datapath/ldx_path/dataRam/INST_LOOP[1].ram_inst
datapath/stx_path/addr1Cam/INST_LOOP[1].cam_inst
datapath/stx_path/addr2Cam_high/INST_LOOP[1].cam_inst
datapath/stx_path/addr2Cam_low/INST_LOOP[1].cam_inst
datapath/stx_path/dataRam/INST_LOOP[1].ram_inst
datapath/stx_path/followingLdRam/INST_LOOP[1].ram_inst
}

create_power_domain PG_LSU_2 -elements {
datapath/ldx_path/addr1Cam/INST_LOOP[2].cam_inst
datapath/ldx_path/addr2Cam/INST_LOOP[2].cam_inst
datapath/ldx_path/stqSizeCam/INST_LOOP[2].cam_inst
datapath/ldx_path/dataRam/INST_LOOP[2].ram_inst
datapath/stx_path/addr1Cam/INST_LOOP[2].cam_inst
datapath/stx_path/addr2Cam_high/INST_LOOP[2].cam_inst
datapath/stx_path/addr2Cam_low/INST_LOOP[2].cam_inst
datapath/stx_path/dataRam/INST_LOOP[2].ram_inst
datapath/stx_path/followingLdRam/INST_LOOP[2].ram_inst
}

create_power_domain PG_LSU_3 -elements {
datapath/ldx_path/addr1Cam/INST_LOOP[3].cam_inst
datapath/ldx_path/addr2Cam/INST_LOOP[3].cam_inst
datapath/ldx_path/stqSizeCam/INST_LOOP[3].cam_inst
datapath/ldx_path/dataRam/INST_LOOP[3].ram_inst
datapath/stx_path/addr1Cam/INST_LOOP[3].cam_inst
datapath/stx_path/addr2Cam_high/INST_LOOP[3].cam_inst
datapath/stx_path/addr2Cam_low/INST_LOOP[3].cam_inst
datapath/stx_path/dataRam/INST_LOOP[3].ram_inst
datapath/stx_path/followingLdRam/INST_LOOP[3].ram_inst
}

# SUPPLY PORT CREATION
create_supply_port VDD -direction in                   
create_supply_port VSS -direction in                   

# SUPPLY NET CREATION
create_supply_net VDD_LSU_1               -domain PG_LSU_1 
create_supply_net VDD_LSU_2               -domain PG_LSU_2 
create_supply_net VDD_LSU_3               -domain PG_LSU_3 


create_supply_net VDD  -domain TOP                     
create_supply_net VDD  -domain PG_LSU_1		            -reuse
create_supply_net VDD  -domain PG_LSU_2		            -reuse
create_supply_net VDD  -domain PG_LSU_3		            -reuse


create_supply_net VSS  -domain TOP 
create_supply_net VSS  -domain PG_LSU_1		            -reuse
create_supply_net VSS  -domain PG_LSU_2		            -reuse
create_supply_net VSS  -domain PG_LSU_3		            -reuse

#CONNECT SUPPLY NETS AND PORTS
connect_supply_net VSS -ports VSS
connect_supply_net VDD -ports VDD


# SET PRIMARY POWER AND GND NETS FOR EACH DOMAIN
set_domain_supply_net TOP                     -primary_power_net VDD                   -primary_ground_net VSS  
set_domain_supply_net PG_LSU_1                -primary_power_net VDD_LSU_1             -primary_ground_net VSS
set_domain_supply_net PG_LSU_2                -primary_power_net VDD_LSU_2             -primary_ground_net VSS
set_domain_supply_net PG_LSU_3                -primary_power_net VDD_LSU_3             -primary_ground_net VSS

# POWER SWITCH CREATION
create_power_switch SW_PG_LSU_1              -domain PG_LSU_1             -output_supply_port {vout VDD_LSU_1 }             -input_supply_port {vin VDD} -control_port {ctrl lsqPartitionActive_i[1]     } -on_state {on_s vin {ctrl}} -off_state {off_s {!ctrl}}
create_power_switch SW_PG_LSU_2              -domain PG_LSU_2             -output_supply_port {vout VDD_LSU_2 }             -input_supply_port {vin VDD} -control_port {ctrl lsqPartitionActive_i[2]     } -on_state {on_s vin {ctrl}} -off_state {off_s {!ctrl}}
create_power_switch SW_PG_LSU_3              -domain PG_LSU_3             -output_supply_port {vout VDD_LSU_3 }             -input_supply_port {vin VDD} -control_port {ctrl lsqPartitionActive_i[3]     } -on_state {on_s vin {ctrl}} -off_state {off_s {!ctrl}}

# PORT STATE CREATION

add_port_state VDD -state {ACTIVE 1.1} -state {OFF off}
add_port_state VSS -state {ACTIVE 0.0}
add_port_state SW_PG_LSU_1/vout                   -state {ACTIVE  1.1} -state {OFF off}
add_port_state SW_PG_LSU_2/vout                   -state {ACTIVE  1.1} -state {OFF off}
add_port_state SW_PG_LSU_3/vout                   -state {ACTIVE  1.1} -state {OFF off}

# ISOLTATION POLICIES
set_isolation ISO_PG_LSU_1             -domain PG_LSU_1              -isolation_power_net VDD -isolation_ground_net VSS -applies_to outputs -clamp_value 0  -diff_supply_only TRUE 
set_isolation ISO_PG_LSU_2             -domain PG_LSU_2              -isolation_power_net VDD -isolation_ground_net VSS -applies_to outputs -clamp_value 0  -diff_supply_only TRUE 
set_isolation ISO_PG_LSU_3             -domain PG_LSU_3              -isolation_power_net VDD -isolation_ground_net VSS -applies_to outputs -clamp_value 0  -diff_supply_only TRUE 

#ISOLATION CONTROL
set_isolation_control ISO_PG_LSU_1             -domain PG_LSU_1              -isolation_signal   lsqPartitionActive_i[1]        -isolation_sense low   -location parent 
set_isolation_control ISO_PG_LSU_2             -domain PG_LSU_2              -isolation_signal   lsqPartitionActive_i[2]        -isolation_sense low   -location parent 
set_isolation_control ISO_PG_LSU_3             -domain PG_LSU_3              -isolation_signal   lsqPartitionActive_i[3]        -isolation_sense low   -location parent 

# Power State Table
create_pst Core_OOO_PST -supplies { VDD VSS SW_PG_LSU_1/vout SW_PG_LSU_2/vout SW_PG_LSU_3/vout}

# Index                                                          VDD     VSS  LSU1   LSU2   LSU3   
add_pst_state ALL_OFF                -pst Core_OOO_PST -state {ACTIVE ACTIVE OFF    OFF    OFF    }
add_pst_state ALL_ON                 -pst Core_OOO_PST -state {ACTIVE ACTIVE ACTIVE ACTIVE ACTIVE }
add_pst_state LSU_1_ON               -pst Core_OOO_PST -state {ACTIVE ACTIVE ACTIVE OFF    OFF    }
add_pst_state LSU_2_ON               -pst Core_OOO_PST -state {ACTIVE ACTIVE ACTIVE ACTIVE OFF    }
add_pst_state LSU_3_ON               -pst Core_OOO_PST -state {ACTIVE ACTIVE ACTIVE ACTIVE ACTIVE }

